/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mycompany.cs321.project;

import java.io.IOException;
import java.text.DecimalFormat;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author conno
 */
public class DashboardMenu extends javax.swing.JFrame {
    private Account currentUser;
    private CurrencyInfo currentCurrency;
    
    /**
     * Creates new form DashboardMenu
     */
    public DashboardMenu() {
        
        initComponents();
    }
    
    /**
     * Creates new form DashboardMenu
     * @param user that has logged in successfully
     */
    public DashboardMenu(Account user) {
        currentUser = user;
        try {
            currentUser.loadAccountInfo();
        } catch (IOException ex) {
            Logger.getLogger(DashboardMenu.class.getName()).log(Level.SEVERE, null, ex);
        }
        initComponents();
        updateAccountInfo();
    }
    
    private void updateAccountInfo() {
        userLabel.setText(currentUser.username);
        
        DecimalFormat df = new DecimalFormat("#.########");
        usdBalanceLabel.setText("USD: " + df.format(currentUser.balanceUSD));
        btcBalanceLabel.setText("BTC: " + df.format(currentUser.balanceBTC));
        ethBalanceLabel.setText("ETH: " + df.format(currentUser.balanceETH));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        selectCryptoComboBox = new javax.swing.JComboBox<>();
        selectCryptoLabel = new javax.swing.JLabel();
        selectCryptoLabel1 = new javax.swing.JLabel();
        logoutButton = new javax.swing.JButton();
        userLabel = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        usdBalanceLabel = new javax.swing.JLabel();
        btcBalanceLabel = new javax.swing.JLabel();
        ethBalanceLabel = new javax.swing.JLabel();
        testBuyBitcoinButton = new javax.swing.JButton();
        balanceLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        selectCryptoComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", "BTC", "ETH" }));
        selectCryptoComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectCryptoComboBoxActionPerformed(evt);
            }
        });

        selectCryptoLabel1.setText("Select Cryptocurrency: ");

        logoutButton.setText("Logout");
        logoutButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                logoutButtonMouseClicked(evt);
            }
        });

        userLabel.setText("name");

        usdBalanceLabel.setText("USD:");

        btcBalanceLabel.setText("BTC:");

        ethBalanceLabel.setText("ETH: ");

        testBuyBitcoinButton.setText("Test Buy $100 BTC");
        testBuyBitcoinButton.setToolTipText("");
        testBuyBitcoinButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                testBuyBitcoinButtonMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(usdBalanceLabel)
                    .addComponent(btcBalanceLabel)
                    .addComponent(ethBalanceLabel))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(testBuyBitcoinButton)
                .addGap(0, 14, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(usdBalanceLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btcBalanceLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ethBalanceLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(testBuyBitcoinButton)
                .addContainerGap(51, Short.MAX_VALUE))
        );

        balanceLabel.setText("Balances:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(selectCryptoLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(selectCryptoComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(selectCryptoLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 417, Short.MAX_VALUE)
                        .addComponent(userLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(logoutButton))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(balanceLabel)
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(28, 28, 28))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(selectCryptoComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(selectCryptoLabel)
                    .addComponent(selectCryptoLabel1)
                    .addComponent(logoutButton)
                    .addComponent(userLabel))
                .addGap(8, 8, 8)
                .addComponent(balanceLabel)
                .addGap(4, 4, 4)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(338, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void selectCryptoComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectCryptoComboBoxActionPerformed
        int selection = selectCryptoComboBox.getSelectedIndex();
        switch (selection) {
            case 0: // None
                currentCurrency = null;
                this.selectCryptoLabel.setText("");
                break;
            case 1: // BTC
                currentCurrency = new CurrencyInfo(selection);
                this.selectCryptoLabel.setText(currentCurrency.name + ": $" + currentCurrency.price);
                break;
            case 2: // ETH
                currentCurrency = new CurrencyInfo(selection);
                this.selectCryptoLabel.setText(currentCurrency.name + ": $" + currentCurrency.price);
                break;
        }   
    }//GEN-LAST:event_selectCryptoComboBoxActionPerformed

    private void logoutButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoutButtonMouseClicked
        this.setVisible(false);
        LoginMenu log = new LoginMenu();
        log.setVisible(true);
    }//GEN-LAST:event_logoutButtonMouseClicked

    private void testBuyBitcoinButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_testBuyBitcoinButtonMouseClicked
        currentUser.testBuyBitcoin(currentCurrency);
        updateAccountInfo();
        try {
            currentUser.saveAccountInfo();
        } catch (IOException ex) {
            Logger.getLogger(DashboardMenu.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_testBuyBitcoinButtonMouseClicked
    
//    /**
//     * @param args the command line arguments
//     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(DashboardMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(DashboardMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(DashboardMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(DashboardMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new DashboardMenu().setVisible(true);
//            }
//        });
//    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel balanceLabel;
    private javax.swing.JLabel btcBalanceLabel;
    private javax.swing.JLabel ethBalanceLabel;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton logoutButton;
    private javax.swing.JComboBox<String> selectCryptoComboBox;
    private javax.swing.JLabel selectCryptoLabel;
    private javax.swing.JLabel selectCryptoLabel1;
    private javax.swing.JButton testBuyBitcoinButton;
    private javax.swing.JLabel usdBalanceLabel;
    public javax.swing.JLabel userLabel;
    // End of variables declaration//GEN-END:variables
}
